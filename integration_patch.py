#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Bot Integration Patch - –ü–∞—Ç—á –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏ –∏ —Å–º–µ–Ω–∞–º–∏
"""

import os
import sys
import re
from pathlib import Path

def apply_integration_patch(bot_file_path: str):
    """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ñ–∞–π–ª—É –±–æ—Ç–∞"""
    
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –±–æ—Ç–∞
        with open(bot_file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # 1. –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é
        content = re.sub(r'VERSION = "[^"]*"', 'VERSION = "4.14"', content)
        
        # 2. –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π
        import_section = '''try:
    from embeddings import EmbeddingService
    from vector_store import VectorStore
    from draft_queue import DraftQueue
    from v2ray_manager import V2RayManager
    from v2ray_commands import V2RayCommands
    from club_manager import ClubManager
    from club_commands import ClubCommands, WAITING_REPORT
    from cash_manager import CashManager
    from cash_commands import CashCommands, CASH_SELECT_CLUB, CASH_SELECT_TYPE, CASH_ENTER_AMOUNT, CASH_ENTER_DESCRIPTION, CASH_ENTER_CATEGORY
    from product_manager import ProductManager
    from product_commands import ProductCommands, PRODUCT_ENTER_NAME, PRODUCT_ENTER_PRICE, PRODUCT_SELECT, PRODUCT_ENTER_QUANTITY, PRODUCT_EDIT_PRICE, PRODUCT_SET_NICKNAME
    from issue_manager import IssueManager
    from issue_commands import IssueCommands, ISSUE_SELECT_CLUB, ISSUE_ENTER_DESCRIPTION, ISSUE_EDIT_DESCRIPTION
    from content_generator import ContentGenerator
    from content_commands import ContentCommands
    # from modules.finmon import register_finmon  # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ - –º–æ–¥—É–ª—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
    from modules.admins import register_admins
    from modules.backup_commands import register_backup_commands
    # –ù–æ–≤—ã–µ –º–æ–¥—É–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏ –∏ —Å–º–µ–Ω–∞–º–∏
    from modules.admin_shift_integration import register_admin_shift_management
    from modules.manual_update import ManualUpdateSystem, ManualUpdateCommands
except ImportError as e:
    print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –º–æ–¥—É–ª–∏ v4.14: {e}")
    sys.exit(1)'''
        
        # –ó–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ü–∏—é –∏–º–ø–æ—Ä—Ç–æ–≤
        content = re.sub(
            r'try:\s*from embeddings import.*?except ImportError as e:.*?sys\.exit\(1\)',
            import_section,
            content,
            flags=re.DOTALL
        )
        
        # 3. –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º –≤ __init__
        init_addition = '''
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏ –∏ —Å–º–µ–Ω–∞–º–∏
        self.admin_shift_integration = None
        self.manual_update_system = ManualUpdateSystem()
        self.manual_update_commands = ManualUpdateCommands(self.manual_update_system)'''
        
        # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –≤ __init__ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        init_pattern = r'(def __init__\(self, config: dict\):.*?self\.config = config)'
        content = re.sub(
            init_pattern,
            r'\1' + init_addition,
            content,
            flags=re.DOTALL
        )
        
        # 4. –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –≤ run()
        registration_addition = '''
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏ –∏ —Å–º–µ–Ω–∞–º–∏
        try:
            self.admin_shift_integration = register_admin_shift_management(app, self.config, DB_PATH)
            logger.info("‚úÖ Admin & Shift Management system registered")
        except Exception as e:
            logger.error(f"‚ùå Error registering Admin & Shift Management: {e}")
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        app.add_handler(CommandHandler("manualupdate", self.manual_update_commands.cmd_manual_update))
        app.add_handler(CommandHandler("updatelog", self.manual_update_commands.cmd_update_log))
        logger.info("‚úÖ Manual update commands registered")'''
        
        # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –≤ run() –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        run_pattern = r'(# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥.*?logger\.info\("‚úÖ Bot v.*?–≥–æ—Ç–æ–≤"\))'
        content = re.sub(
            run_pattern,
            r'\1' + registration_addition,
            content,
            flags=re.DOTALL
        )
        
        # 5. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ cmd_help
        help_addition = '''
üë• –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–´ (v4.14):
/adminmgmt - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏
/shiftmgmt - –∫–æ–Ω—Ç—Ä–æ–ª—å —Å–º–µ–Ω —Å —Ñ–æ—Ç–æ –∏ OCR
/systemstatus - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–Ø (v4.14):
/manualupdate - —Ä—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
/updatelog - –ª–æ–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π'''
        
        # –ù–∞—Ö–æ–¥–∏–º —Å–µ–∫—Ü–∏—é –∞–¥–º–∏–Ω–æ–≤ –≤ help
        help_pattern = r'(üë• –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–´:.*?/listadmins - —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤)'
        content = re.sub(
            help_pattern,
            r'\1' + help_addition,
            content,
            flags=re.DOTALL
        )
        
        # 6. –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤–µ—Ä—Å–∏–∏
        content = re.sub(r'Club Assistant Bot v[\d.]+', 'Club Assistant Bot v4.14', content)
        content = re.sub(r'–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è v[\d.]+', '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è v4.14', content)
        content = re.sub(r'–ë–æ—Ç v[\d.]+ –≥–æ—Ç–æ–≤', '–ë–æ—Ç v4.14 –≥–æ—Ç–æ–≤', content)
        
        # 7. –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ –¥–ª—è —Å–º–µ–Ω
        photo_handler_addition = '''
    async def handle_shift_photo(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ —Å–º–µ–Ω—ã —Å OCR"""
        if not self._should_respond(update, context):
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ñ–æ—Ç–æ —Å–º–µ–Ω—ã
        if context.user_data.get('waiting_for_shift_photo'):
            if self.admin_shift_integration:
                await self.admin_shift_integration.handle_shift_with_photo(update, context)
            else:
                await update.message.reply_text("‚ùå –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–º–µ–Ω–∞–º–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            # –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
            await self.handle_photo(update, context)'''
        
        # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ handle_photo
        photo_pattern = r'(async def handle_photo\(self, update: Update, context: ContextTypes\.DEFAULT_TYPE\):.*?await update\.message\.reply_text\(f"‚ùå \{e\}"\))'
        content = re.sub(
            photo_pattern,
            r'\1' + photo_handler_addition,
            content,
            flags=re.DOTALL
        )
        
        # 8. –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ç–æ
        photo_registration_pattern = r'(app\.add_handler\(MessageHandler\(filters\.PHOTO, self\.handle_photo\)\))'
        content = re.sub(
            photo_registration_pattern,
            r'app.add_handler(MessageHandler(filters.PHOTO, self.handle_shift_photo))',
            content
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(bot_file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print("‚úÖ Integration patch applied successfully")
        return True
        
    except Exception as e:
        print(f"‚ùå Error applying integration patch: {e}")
        return False

def create_migration_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    migration_script = '''#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Database Migration Script - –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏ –∏ —Å–º–µ–Ω–∞–º–∏
"""

import sqlite3
import os
import sys
from pathlib import Path

def run_migration(db_path: str):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏
        migration_file = Path(__file__).parent / "migrations" / "admin_shift_management_001_init.sql"
        
        if not migration_file.exists():
            print(f"‚ùå Migration file not found: {migration_file}")
            return False
        
        with open(migration_file, 'r', encoding='utf-8') as f:
            migration_sql = f.read()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        cursor.executescript(migration_sql)
        conn.commit()
        conn.close()
        
        print("‚úÖ Database migration completed successfully")
        return True
        
    except Exception as e:
        print(f"‚ùå Error running migration: {e}")
        return False

if __name__ == "__main__":
    db_path = sys.argv[1] if len(sys.argv) > 1 else "knowledge.db"
    run_migration(db_path)
'''
    
    with open("migrate_admin_shift.py", "w", encoding="utf-8") as f:
        f.write(migration_script)
    
    print("‚úÖ Migration script created: migrate_admin_shift.py")

def create_setup_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    
    setup_script = '''#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º–∏ –∏ —Å–º–µ–Ω–∞–º–∏

echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Admin & Shift Management..."

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
sudo apt update
sudo apt install -y tesseract-ocr tesseract-ocr-rus libtesseract-dev

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤..."
pip3 install opencv-python>=4.8.0 pytesseract>=0.3.10 Pillow>=10.0.0

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ñ–æ—Ç–æ
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p /opt/club_assistant/photos
mkdir -p /opt/club_assistant/backups

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤
echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
chown -R club_assistant:club_assistant /opt/club_assistant/photos
chown -R club_assistant:club_assistant /opt/club_assistant/backups

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é: python3 migrate_admin_shift.py"
echo "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: systemctl restart club_assistant"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: /systemstatus"
'''
    
    with open("setup_admin_shift.sh", "w", encoding="utf-8") as f:
        f.write(setup_script)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod("setup_admin_shift.sh", 0o755)
    
    print("‚úÖ Setup script created: setup_admin_shift.sh")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python3 integration_patch.py <bot_file_path>")
        sys.exit(1)
    
    bot_file_path = sys.argv[1]
    
    if not os.path.exists(bot_file_path):
        print(f"‚ùå Bot file not found: {bot_file_path}")
        sys.exit(1)
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞—Ç—á
    if apply_integration_patch(bot_file_path):
        print("‚úÖ Integration patch applied successfully")
        
        # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
        create_migration_script()
        create_setup_script()
        
        print("")
        print("üéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("")
        print("üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ./setup_admin_shift.sh")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é: python3 migrate_admin_shift.py")
        print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: systemctl restart club_assistant")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã: /adminmgmt, /shiftmgmt, /systemstatus")
        
    else:
        print("‚ùå Failed to apply integration patch")
        sys.exit(1)
