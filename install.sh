#!/bin/bash
# –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ Club Assistant Bot v2.1
# –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø - —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${GREEN}"
cat << 'EOF'
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë   CLUB ASSISTANT BOT INSTALLER    ‚ïë
‚ïë         v2.1 Final Edition         ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root
if [ "$EUID" -ne 0 ]; then 
    echo -e "${RED}‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç root: sudo bash install.sh${NC}"
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–¥–µ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è
CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
echo -e "${BLUE}üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $CURRENT_DIR${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ bot.py –µ—Å—Ç—å
if [ ! -f "$CURRENT_DIR/bot.py" ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!${NC}"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã —Ä–∞—Å–ø–∞–∫–æ–≤–∞–ª–∏ –∞—Ä—Ö–∏–≤ –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–ø–∫–µ."
    exit 1
fi

echo ""
echo -e "${BLUE}–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏:${NC}"
echo "1) –û–±—ã—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (systemd) - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è"
echo "2) Docker —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
read -p "–í—ã–±–æ—Ä (1 –∏–ª–∏ 2): " INSTALL_TYPE

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo ""
echo -e "${YELLOW}[1/5]${NC} –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
export DEBIAN_FRONTEND=noninteractive
apt-get update -qq > /dev/null 2>&1

if [ "$INSTALL_TYPE" == "2" ]; then
    # Docker —É—Å—Ç–∞–Ω–æ–≤–∫–∞
    echo -e "${YELLOW}[2/5]${NC} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    
    if ! command -v docker &> /dev/null; then
        echo "  –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Docker..."
        curl -fsSL https://get.docker.com | sh > /dev/null 2>&1
        systemctl enable docker > /dev/null 2>&1
        systemctl start docker
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        echo "  –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Docker Compose..."
        apt-get install -y docker-compose > /dev/null 2>&1
    fi
    
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    # –û–±—ã—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
    echo -e "${YELLOW}[2/5]${NC} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    apt-get install -y python3 python3-pip python3-venv git > /dev/null 2>&1
    echo "‚úÖ –ü–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ
echo -e "${YELLOW}[3/5]${NC} –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..."

REQUIRED_FILES=("bot.py" "requirements.txt" ".gitignore")
for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$CURRENT_DIR/$file" ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        exit 1
    fi
done

if [ "$INSTALL_TYPE" == "2" ]; then
    if [ ! -f "$CURRENT_DIR/Dockerfile" ] || [ ! -f "$CURRENT_DIR/docker-compose.yml" ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: Docker —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!${NC}"
        exit 1
    fi
fi

echo "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
echo ""
echo -e "${YELLOW}[4/5]${NC} –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo ""
echo "–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã –∑–¥–µ—Å—å:"
echo "  üîπ Telegram Bot Token: https://t.me/botfather ‚Üí /newbot"
echo "  üîπ OpenAI API Key: https://platform.openai.com/api-keys"
echo "  üîπ –í–∞—à Telegram ID: https://t.me/userinfobot ‚Üí /start"
echo ""

read -p "Telegram Bot Token: " TG_TOKEN
read -p "OpenAI API Key: " OPENAI_KEY
read -p "–í–∞—à Telegram ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã): " ADMIN_ID

echo ""
read -p "GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (Enter = –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å): " GITHUB_REPO

# –°–æ–∑–¥–∞—ë–º config.json
cat > "$CURRENT_DIR/config.json" << EOF
{
  "telegram_token": "$TG_TOKEN",
  "openai_api_key": "$OPENAI_KEY",
  "admin_ids": [$ADMIN_ID],
  "github_repo": "$GITHUB_REPO"
}
EOF

chmod 600 "$CURRENT_DIR/config.json"
echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫
echo ""
echo -e "${YELLOW}[5/5]${NC} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫..."

if [ "$INSTALL_TYPE" == "2" ]; then
    # Docker –∑–∞–ø—É—Å–∫
    cd "$CURRENT_DIR"
    echo "  –°–æ–±–∏—Ä–∞—é Docker –æ–±—Ä–∞–∑..."
    docker-compose up -d --build
    
    echo ""
    echo -e "${GREEN}‚úÖ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê (Docker)${NC}"
    echo ""
    echo -e "${BLUE}üìã –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:${NC}"
    echo "  –°—Ç–∞—Ç—É—Å:     cd $CURRENT_DIR && docker-compose ps"
    echo "  –õ–æ–≥–∏:       cd $CURRENT_DIR && docker-compose logs -f"
    echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: cd $CURRENT_DIR && docker-compose restart"
    echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  cd $CURRENT_DIR && docker-compose down"
    
    echo ""
    echo "–ü–æ–∫–∞–∑—ã–≤–∞—é —Å—Ç–∞—Ç—É—Å..."
    sleep 2
    docker-compose ps
    
else
    # Systemd —É—Å—Ç–∞–Ω–æ–≤–∫–∞
    cd "$CURRENT_DIR"
    
    echo "  –°–æ–∑–¥–∞—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    python3 -m venv venv
    
    echo "  –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    source venv/bin/activate
    pip install -q --upgrade pip
    pip install -q -r requirements.txt
    deactivate
    
    # Systemd service
    echo "  –°–æ–∑–¥–∞—é systemd service..."
    cat > /etc/systemd/system/club_assistant.service << EOF
[Unit]
Description=Club Assistant Bot v2.1
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=$CURRENT_DIR
ExecStart=$CURRENT_DIR/venv/bin/python $CURRENT_DIR/bot.py
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal
SyslogIdentifier=club_assistant

[Install]
WantedBy=multi-user.target
EOF
    
    systemctl daemon-reload
    systemctl enable club_assistant > /dev/null 2>&1
    systemctl start club_assistant
    
    echo ""
    echo -e "${GREEN}‚úÖ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê (Systemd)${NC}"
    echo ""
    echo -e "${BLUE}üìã –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:${NC}"
    echo "  –°—Ç–∞—Ç—É—Å:     systemctl status club_assistant"
    echo "  –õ–æ–≥–∏:       journalctl -u club_assistant -f"
    echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: systemctl restart club_assistant"
    echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  systemctl stop club_assistant"
    
    echo ""
    echo "–ü–æ–∫–∞–∑—ã–≤–∞—é —Å—Ç–∞—Ç—É—Å..."
    sleep 2
    systemctl status club_assistant --no-pager -l
fi

echo ""
echo -e "${BLUE}üìÅ –§–∞–π–ª—ã:${NC}"
echo "  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $CURRENT_DIR"
echo "  –ö–æ–Ω—Ñ–∏–≥:     $CURRENT_DIR/config.json"
echo "  –ë–∞–∑–∞:       $CURRENT_DIR/knowledge.db (—Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)"
echo ""

if [ -n "$GITHUB_REPO" ]; then
    echo -e "${BLUE}üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:${NC}"
    echo ""
    echo "1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ Git:"
    echo "   cd $CURRENT_DIR"
    echo "   git init"
    echo "   git add bot.py requirements.txt .gitignore"
    echo "   git commit -m 'Initial commit'"
    echo ""
    echo "2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub:"
    echo "   git remote add origin $GITHUB_REPO"
    echo "   git push -u origin main"
    echo ""
    echo "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /update –≤ Telegram –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞"
    echo ""
fi

echo -e "${GREEN}üéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–æ—Ç–∞ –≤ Telegram!${NC}"
echo ""
echo -e "${YELLOW}–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É /start${NC}"
echo ""
