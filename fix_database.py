#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≥–¥–µ –≤–æ–ø—Ä–æ—Å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "—á—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏"
"""

import sqlite3
import sys

DB_PATH = 'knowledge.db'

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    # –ò—â–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≥–¥–µ –≤–æ–ø—Ä–æ—Å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "—á—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏"
    cursor.execute('''
        SELECT id, question, answer 
        FROM knowledge 
        WHERE question LIKE '—á—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏%'
        AND is_current = 1
        ORDER BY id
        LIMIT 20
    ''')
    
    records = cursor.fetchall()
    
    print(f"\n–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(records)}")
    print("\n–ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–µ–π:\n")
    
    for rec_id, question, answer in records[:5]:
        print(f"ID: {rec_id}")
        print(f"–í–æ–ø—Ä–æ—Å: {question[:80]}")
        print(f"–û—Ç–≤–µ—Ç: {answer[:80]}")
        print("-" * 80)
    
    if not records:
        print("‚úÖ –ù–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π")
        conn.close()
        return
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï!")
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(records)} –∑–∞–ø–∏—Å–µ–π –≥–¥–µ –≤–æ–ø—Ä–æ—Å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '—á—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏'")
    print("–≠—Ç–æ –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Å –ø–ª–æ—Ö–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.")
    print("\n–í–∞—Ä–∏–∞–Ω—Ç—ã:")
    print("1. –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —ç—Ç–∏ –∑–∞–ø–∏—Å–∏")
    print("2. –ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ (is_current = 0)")
    print("3. –û—Ç–º–µ–Ω–∞")
    
    choice = input("\n–í—ã–±–µ—Ä–∏ (1/2/3): ").strip()
    
    if choice == "1":
        # –£–¥–∞–ª—è–µ–º
        print("\nüóëÔ∏è  –£–¥–∞–ª—è—é –∑–∞–ø–∏—Å–∏...")
        cursor.execute('''
            DELETE FROM knowledge 
            WHERE question LIKE '—á—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏%'
            AND is_current = 1
        ''')
        deleted = cursor.rowcount
        conn.commit()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ: {deleted}")
        
    elif choice == "2":
        # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º
        print("\nüîí –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É—é –∑–∞–ø–∏—Å–∏...")
        cursor.execute('''
            UPDATE knowledge 
            SET is_current = 0
            WHERE question LIKE '—á—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏%'
            AND is_current = 1
        ''')
        updated = cursor.rowcount
        conn.commit()
        print(f"‚úÖ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: {updated}")
        
    else:
        print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
    
    conn.close()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ:")
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute('SELECT COUNT(*) FROM knowledge WHERE is_current = 1')
    total = cursor.fetchone()[0]
    print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {total}")
    conn.close()


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
